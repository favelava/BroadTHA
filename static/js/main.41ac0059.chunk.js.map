{"version":3,"sources":["Components/Button.js","Components/CountryList.js","Components/DataButtonRow.js","Components/Graph.js","Components/Choropleth.js","Components/App.js","index.js"],"names":["Button","props","className","name","onClick","value","CountryList","numarray","i","len","this","countries","length","push","map","num","makeButtons","React","Component","DataButtonRow","jsonLabels","Graph","xarray","yarray","Object","keys","json","country","values","forEach","parseInt","localeCompare","data","x","y","type","layout","title","automargin","mode","marker","color","Choropleth","locations","zarray","locationmode","z","colorbar","jsonLabel","height","geo","projection","landcolor","caseCounts","require","sequences","seqPerThou","elasticity","App","state","jsonFiles","jsonIndex","countryIndex","setState","index","changeCountry","handleClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.41ac0059.chunk.js","sourcesContent":["function Button(props) {\r\n  return (\r\n    <button className={props.name} onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport Button from './Button.js';\r\n\r\nclass CountryList extends React.Component {\r\n  makeButtons() {\r\n    // Automatically makes buttons for every country in current json file\r\n    let numarray = [];\r\n    for (let i=0, len=this.props.countries.length; i < len; i++){\r\n      numarray.push(i);\r\n    }\r\n\r\n    return (\r\n      <ul>\r\n      {\r\n        numarray.map(num => {\r\n          return(<li key={num}>\r\n            <Button\r\n            value={this.props.countries[num]}\r\n            onClick={()=>this.props.onClick(num)}\r\n            name={'country-button'}\r\n            />\r\n            </li>\r\n          );\r\n        })\r\n      }\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n          {this.makeButtons()};\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CountryList;\r\n","import React from 'react';\r\nimport Button from './Button.js';\r\n\r\nclass DataButtonRow extends React.Component {\r\n  // Renders 'data buttons' representing the json files loaded into the App\r\n  render() {\r\n    let numarray = [];\r\n    for (let i=0, len=this.props.jsonLabels.length; i < len; i++){\r\n      numarray.push(i);\r\n    }\r\n\r\n    return (\r\n      numarray.map(num => {\r\n        return (\r\n          <Button\r\n            value={this.props.jsonLabels[num]}\r\n            onClick={()=>this.props.onClick(num)}\r\n            name={'data-button'}\r\n          />\r\n        );\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataButtonRow;\r\n","import React from 'react';\r\nimport Plot from 'react-plotly.js';\r\n\r\nclass Graph extends React.Component {\r\n  // Plotly React Component plots the current jsonFile/country pair\r\n  render() {\r\n    let yarray = [];\r\n    let xarray = [];\r\n\r\n    xarray = Object.keys(this.props.json[this.props.country]);\r\n\r\n    Object.values(this.props.json[this.props.country]).forEach(value => {\r\n      yarray.push(parseInt(value));\r\n    })\r\n\r\n    if (this.props.country.localeCompare('All') === 0) {\r\n      return (\r\n        <Plot data = {[\r\n          {\r\n            x: xarray,\r\n            y: yarray,\r\n            type: 'bar',\r\n          }\r\n        ]}\r\n        layout = {\r\n          {title: 'All',\r\n          automargin: true\r\n          }\r\n        }\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <Plot data={[\r\n            {\r\n              x: xarray,\r\n              y: yarray,\r\n              type: 'scatter',\r\n              mode: 'lines+markers',\r\n              marker: {color: 'red'}\r\n            }\r\n          ]}\r\n          layout = {\r\n            {title: this.props.country,\r\n            }\r\n          }\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Graph;\r\n","import React from 'react';\r\nimport Plot from 'react-plotly.js';\r\n\r\nclass Choropleth extends React.Component {\r\n  render() {\r\n    let locations = [];\r\n    let zarray = [];\r\n\r\n    locations = Object.keys(this.props.json['All']);\r\n    Object.values(this.props.json['All']).forEach(value => {\r\n      zarray.push(parseInt(value));\r\n    })\r\n\r\n    return (\r\n      <Plot data={[\r\n        {\r\n          type: 'choropleth',\r\n          locationmode: 'country names',\r\n          locations: locations,\r\n          z: zarray,\r\n          automargin: true,\r\n          colorbar: {\r\n            x: -0.2,\r\n          }\r\n        }\r\n      ]}\r\n      layout = {\r\n        {\r\n          title: 'Choropleth Map: ' + this.props.jsonLabel,\r\n          height: 550,\r\n          geo: {\r\n            projection: {\r\n              type: 'robinson',\r\n              landcolor: 'black'\r\n            }\r\n          }\r\n        }\r\n      }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Choropleth;\r\n","import React from 'react';\r\nimport CountryList from './CountryList.js';\r\nimport DataButtonRow from './DataButtonRow.js';\r\nimport Graph from './Graph.js';\r\nimport Choropleth from './Choropleth.js';\r\nimport '../index.css';\r\n\r\n/*\r\n To add more json files, list the path to the json file as below. In the App React Component's constructor, add the variable name to this.state.jsonFiles, a label to this.state.jsonLabels, and an initial index to this.state.countryIndex\r\n*/\r\n\r\nconst caseCounts = require('../data/json_files/counts.json');\r\nconst sequences = require('../data/json_files/sequences.json');\r\nconst seqPerThou = require('../data/json_files/sequencesper1000cases.json');\r\nconst elasticity = require('../data/json_files/elasticity.json');\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      jsonFiles: [caseCounts, sequences, seqPerThou, elasticity],\r\n      jsonLabels: ['Number of Covid Cases', 'Number of Sequences', 'Sequences per 1000 Cases', 'Elasticity'],\r\n      jsonIndex: 0,\r\n      countryIndex: [0, 0, 0, 0],\r\n      countries: Object.keys(caseCounts)\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    this.setState({\r\n      jsonIndex: i,\r\n      countries: Object.keys(this.state.jsonFiles[i])\r\n    })\r\n  }\r\n\r\n  changeCountry(i) {\r\n    let index = this.state.countryIndex;\r\n    index[this.state.jsonIndex] = i;\r\n\r\n    this.setState({\r\n      countryIndex: index,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='app'>\r\n        <div className='column left'>\r\n            <div className='dropdown-content'>\r\n              <CountryList\r\n                countries={this.state.countries}\r\n                onClick={(i) => this.changeCountry(i)}\r\n              />\r\n            </div>\r\n        </div>\r\n\r\n        <div className='column right'>\r\n          <div className='data-button-row'>\r\n            <DataButtonRow\r\n              jsonLabels={this.state.jsonLabels}\r\n              onClick={(i) => this.handleClick(i)}\r\n            />\r\n          </div>\r\n\r\n          <div className='graph'>\r\n            <Graph\r\n              json={this.state.jsonFiles[this.state.jsonIndex]}\r\n              country={this.state.countries[this.state.countryIndex[this.state.jsonIndex]]}\r\n            />\r\n          </div>\r\n\r\n          <div className='choropleth'>\r\n            <Choropleth\r\n              json={this.state.jsonFiles[this.state.jsonIndex]}\r\n              country={this.state.countries[this.state.countryIndex[this.state.jsonIndex]]}\r\n              jsonLabel={this.state.jsonLabels[this.state.jsonIndex]}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\nimport App from './Components/App.js';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}